type Query {
  loadTest: LoadTest
  blockStatHistory: [BlockStat!]!
}

type Mutation {
  login(name: String!, password: String!): String!
  startTest(loadConfig: LoadConfigInput!): LoadTest!
  stopTest: LoadTest
}

type Subscription {
  loadTestChanged: LoadTest!
  blockStatHistoryChanged: [BlockStat!]!
}

###########

input LoadConfigInput {
  eps: Float!
  nbOfChains: Int!
  entrySize: Int
}

###########

type LoadTest {
  id: String!
  events: [LoadTestEvent!]!
  generator: Generator!
}

type LoadTestEvent {
  user: String!
  type: String!
  timestamp: Int!
}

type Generator {
  config: LoadConfig!
  data: GeneratorData!
}

type LoadConfig {
  eps: Float!
  nbOfChains: Int!
  entrySize: Int!
}

type GeneratorData {
  chainIds: [String!]!
  ecAddress: String!
}

type BlockStat {
  height: Int!
  timestamp: Int!
  aeps: Float!
}

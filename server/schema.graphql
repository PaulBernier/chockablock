type Query {
  loadTest: LoadTest
  loadTestHistory(id: String, pageSize: Int!): [LoadTest!]!
  blockStatHistory: BlockStatHistory!
  ecBalance: EcBalance!
}

type Mutation {
  login(name: String!, password: String!): String!
  startTest(loadConfig: LoadConfigInput!): LoadTest!
  stopTest: LoadTest
}

type Subscription {
  loadTestChanged: LoadTest!
  blockStatHistoryChanged: BlockStatHistory!
  ecBalanceChanged: EcBalance!
}

###########

input LoadConfigInput {
  type: String!
  nbOfChains: Int!
  generatorConfig: ConstantLoadConfigInput
}

input ConstantLoadConfigInput {
  eps: Float!
  entrySize: Int
}

###########

type EcBalance {
  address: String!
  balance: Int!
}

type LoadTest {
  _id: String!
  start: StartStopEvent!
  end: StartStopEvent
  type: String!
  chainIds: [String!]!
  generatorConfig: ConstantLoadConfig!
}

type ConstantLoadConfig {
  eps: Float!
  entrySize: Int
}

type StartStopEvent {
  user: String!
  timestamp: Int!
}

type BlockStatHistory {
  currentBlockStartTime: Int!
  history: [BlockStat!]!
}

type BlockStat {
  height: Int!
  timestamp: Int!
  entryCount: Int!
  hasElection: Boolean!
}
